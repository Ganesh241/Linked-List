#include <bits/stdc++.h>

using namespace std;

struct node{
    int data;
    node *next;
    node(int x)
    {
        data=x;
        next=NULL;
    }
};

node *insertAtLast(node *head,int num)
{
    node *temp=new node(num);
    if(head==NULL)
    {
        return temp;
    }
    
    node *curr=head;
    while(curr->next!=NULL)
    {
        curr=curr->next;
    }
    curr->next=temp;
    return head;
}

node *insertAtBeggin(node *head,int x)
{
    node *t=new node(x);
    t->next=head;
    return t;
}

node *deleteFirstNode(node *head)
{
    if(head == NULL)
    {
        return NULL;
    }
    else if(head->next == NULL)
    {
        delete head;
        return NULL;
    }
    else
    {
        node *temp = head->next;
        delete head;
        return temp;
    }
}

node *deleteLastNode(node *head)
{
    if(head==NULL)
    {
        return NULL;
    }
    if(head->next==NULL)
    {
        delete head;
        return NULL;
    }
    else
    {
        node *curr=head;
        while(curr->next->next!=NULL)
        {
            curr=curr->next;
        }
        curr->next=NULL;
        return head;
    }
}

node *insertAtGivenPos(node *head,int pos,int x)
{
    node *temp=new node(x);
    if(pos==1)
    {
        temp->next=head;
        return temp;
    }
    node *curr=head;
    for(int i=1;i<=pos-2;i++)
    {
        curr=curr->next;
    }
    if(curr==NULL)
    {
        return head;
    }
    temp->next=curr->next;
    curr->next=temp;
    return head;
}

int serachInList(node *head,int x)
{
    int pos=1;
    node *curr=head;
    while(curr!=NULL)
    {
        if(curr->data==x)
        {
            return pos;
        }
        else{
            pos++;
            curr=curr->next;
        }
        
    }
    return -1;
}

void printList(node *head)
{
    node *curr=head;
    while(curr)
    {
        cout<<curr->data<<" ";
        curr=curr->next;
    }
}

void recursivePrint(node *head)
{
    if(head==NULL) return;
    else
    {
        cout<<head->data<<" ";
        head=head->next;
        recursivePrint(head);
    }
}

int main()
{
    node *head=NULL;
    head= insertAtLast(head,10);
    head=insertAtLast(head,20);
    head=insertAtBeggin(head,5);
    head=insertAtBeggin(head,2);
    // printList(head);
    head=insertAtLast(head,30);
    
    head=deleteFirstNode(head);
    head=deleteLastNode(head);
    head=insertAtGivenPos(head,2,7);
    
    recursivePrint(head);
    cout<<endl;
    cout<<"the 10 node position in linkedlist is "<<serachInList(head,10);
    return 0;
}
